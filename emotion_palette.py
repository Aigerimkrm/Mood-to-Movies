# -*- coding: utf-8 -*-
"""emotion_palette.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1el-RzpiFxzZvJSPOsc0wndsJD-9EhepU
"""


from transformers import pipeline
from colors import colors
from PIL import Image
from io import BytesIO

# Use keys from your color dictionary as labels
candidate_labels = list(colors.keys())

# Load the zero-shot classification model
zero_shot_classifier = pipeline("zero-shot-classification")

def predict_emotion(text):
    result = zero_shot_classifier(text, candidate_labels)
    best_emotion = result['labels'][0]
    best_score = result['scores'][0]
    return best_emotion, best_score

def predict_emotion_and_palette(text):
    emotion, score = predict_emotion(text)
    palette = colors.get(emotion, [(0, 0, 0)])  # fallback: black
    return emotion, score, palette

def generate_gradient_image(palette, width=300, height=50):
    gradient = Image.new('RGB', (width, height))
    for x in range(width):
        ratio = (x / (width - 1)) * (len(palette) - 1)
        idx = int(ratio)
        blend_ratio = ratio - idx
        c1 = palette[idx]
        c2 = palette[min(idx + 1, len(palette) - 1)]
        blend = tuple(
            int(c1[i] * (1 - blend_ratio) + c2[i] * blend_ratio)
            for i in range(3)
        )
        for y in range(height):
            gradient.putpixel((x, y), blend)
    buffer = BytesIO()
    gradient.save(buffer, format="PNG")
    buffer.seek(0)
    return buffer

